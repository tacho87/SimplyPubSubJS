{"version":3,"sources":["webpack:///webpack/bootstrap 2ef1db07e89f231cc8c3","webpack:///./src/rehoard.js","webpack:///./src/rehoard/rehoard.js","webpack:///./src/rehoard/components/rehoardpubsub.js","webpack:///./src/rehoard/components/consolemessages.js"],"names":["module","exports","window","ReHoard","e","_reHoardPubSub","settings","changeSettings","stateName","stateValue","_create","actionReference","dispatch","listener","subscribe","unSubscribeCB","subscribeWhenBecomesAlive","broadcastState","getCurrentValue","deleteState","redo","undo","getStatesNames","ReHoardPubSub","_states","_actions_history","_storageName","_persistanceLoad","_willSubscribeWhenAlive","_debug","_settings","persistance","persist","session","timeAlive","undoRedo","actionsHistory","actionsHistoryLimit","typeMutable","production","test","sessionStorage","localStorage","success","error","hasOwnProperty","state","_update","_notifysubscribers","_persistanceSave","push","name","index","subscribers","undefined","_a_history","unSubscribe","_unSubscribe","warn","value","redoStack","length","undoStack","action","s","pop","getCurrentState","states","property","typeOfElement","_willSubscribeCore","splice","parseInt","jedis","filter","map","forEach","i","o","storage","data","date","Date","setItem","JSON","stringify","log","results","getItem","parse","setDate","getDate","removeItem","Object","assign","x","ConsoleMessages","text","console"],"mappings":"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","file":"rehoard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2ef1db07e89f231cc8c3\n **/","\nimport ReHoard from './rehoard/rehoard.js';\n\n\nmodule.exports = (() => {\n    try {\n        window.ReHoard = ReHoard;\n        return window.ReHoard;\n    } catch (e) {\n        return ReHoard;\n    }\n})();\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard.js\n **/","import ReHoardPubSub from \"./components/rehoardpubsub.js\";\n\n\n\nexport default class ReHoard {\n    constructor() {\n        this._reHoardPubSub = new ReHoardPubSub();\n    }\n\n    /* Allow to change default settings. \n    settings = {\n            persist : true,\n            session : true,\n            timeAlive : 1,\n            undoRedo:  true,\n            actionsHistory: true,\n            actionsHistoryLimit:  100,\n            typeMutable: false,\n            production:  true\n       };\n   */\n    changeSettings(settings) {\n        this._reHoardPubSub.changeSettings(settings);\n    }\n\n    // Allows to create the state in a more explict way, a value must be passed to determine its type.\n    // Dispatch will handle creation, so this is not needed.\n    create(stateName, stateValue) {\n        return this._reHoardPubSub._create(stateName, stateValue, \"CREATION\");\n    }\n\n\n    // dispatch changes, this will broadcast to any subscribers.\n    // If state does not exists, it will create it, otherwise, it will update its value. \n    dispatch(stateName, stateValue, actionReference = \"\") {\n        return this._reHoardPubSub.dispatch(stateName, stateValue, actionReference);\n    }\n\n    // subcribes to an existing state, if it does not exists it will throw an exception. \n    subscribe(stateName, listener) {\n        return this._reHoardPubSub.subscribe(stateName, listener);\n    }\n\n    // will subscribe if the state exists, otherwise will queue it up once it is created. \n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB) {\n        return this._reHoardPubSub.subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB);\n    }\n\n    // force a broadcast of the current value to everyone\n    broadcastState(stateName) {\n        return this._reHoardPubSub.broadcastState(stateName);\n    }\n\n    // returns current value of the state sync. No broadcasting happens\n    getCurrentState(stateName) {\n        return this._reHoardPubSub.getCurrentValue(stateName);\n    }\n\n    // Delete the current state and its listeners.\n    deleteState(stateName) {\n        return this._reHoardPubSub.deleteState(stateName);\n    }\n\n    // Redo the value state + action \n    redo(stateName) {\n        return this._reHoardPubSub.redo(stateName);\n    }\n\n    // Undo the value to previous one\n    undo(stateName) {\n        return this._reHoardPubSub.undo(stateName);\n    }\n\n    // Prints all states\n    getStatesNames(){\n        return this._reHoardPubSub.getStatesNames();\n    }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/rehoard.js\n **/","import ConsoleMessages from './consolemessages.js';\n\n\nexport default class ReHoardPubSub {\n\n    constructor() {\n        this.changeSettings(null);\n        this._states = {};\n        this._actions_history = [];\n        this._storageName = \"ReHoard\";\n        this._persistanceLoad();\n        this._willSubscribeWhenAlive = [];\n        this._debug;\n    }\n\n\n    changeSettings(settings) {\n\n        this._settings = {\n            persistance: {\n                persist: (settings && settings.persist ? settings.persist : true),\n                session: (settings && settings.session ? settings.session : true),\n                timeAlive: (settings && settings.timeAlive ? settings.timeAlive : 1)\n            },\n            undoRedo: (settings && settings.undoRedo ? settings.undoRedo : true),\n            actionsHistory: (settings && settings.actionsHistory ? settings.actionsHistory : true),\n            actionsHistoryLimit: (settings && settings.actionsHistoryLimit ? settings.actionsHistoryLimit : 100),\n            typeMutable: (settings && settings.typeMutable ? settings.typeMutable : false),\n            production: (settings && settings.production ? settings.production : true)\n        };\n\n        try {\n            let test = sessionStorage || localStorage;\n        } catch (e) {\n            this._settings.persist = false;\n            this._settings.persist = false;\n        }\n        this._debug = new ConsoleMessages(this._settings.production);\n    }\n\n    dispatch(stateName, stateValue, actionReference = \"\") {\n        let success = false;\n\n        if (!stateName || !stateValue) {\n            this._debug.error(\"Null parameters dispatched \");\n            return success;\n        }\n        if (typeof actionReference !== \"string\") {\n            this._debug.error(\"An action must be a string type\");\n            return success;\n        }\n\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n\n            this._update(state, stateName, stateValue, actionReference);\n            this._notifysubscribers(state);\n\n            success = true;\n        } else {\n\n            this._create(stateName, stateValue, actionReference);\n\n            success = true;\n        }\n\n\n        this._persistanceSave();\n\n        return success;\n    }\n\n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB) {\n        if (this._states.hasOwnProperty(stateName) && listener) {\n            return this.subscribe(stateName, listener);\n        } else {\n            return this._willSubscribeWhenAlive.push({ name: stateName, listener: listener, unSubscribeCB: unSubscribeCB });\n        }\n    }\n\n    subscribe(stateName, listener) {\n        if (this._states.hasOwnProperty(stateName) && listener) {\n\n            let state = this._states[stateName];\n            let index = state.subscribers.push({\n                listener: listener,\n                unSubscribeCB: undefined\n            });\n            this._a_history(state, \"Listener Subscribed\");\n            this._notifysubscribers(state);\n            return {\n                unSubscribe: () => { this._unSubscribe(stateName, index) }\n            };\n        } else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot subscribe... :(\");\n            return false;\n        }\n    }\n\n    broadcastState(stateName) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            this._notifysubscribers(state);\n            success = true;\n        } else {\n            this._debug.warn(\"getCurrentState failed to find state, check your state name\")\n        }\n        return success;\n    }\n\n\n    getCurrentValue(stateName) {\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            return state.value;\n        } else {\n            return null;\n        }\n    }\n\n\n    deleteState(stateName) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName)) {\n            this._a_history(this._states[stateName], \"State Deleted\");\n            this._persistanceSave();\n            delete this._states[stateName];\n            success = !this._states[stateName];\n        } else {\n            this._debug.error(stateName + \" does not exits yet... Cannot delete\");\n        }\n        return success;\n    }\n\n    redo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.redoStack.length > 0) {\n                state.undoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.redoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Redo\");\n                this.getCurrentState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n        }\n        return success;\n\n    }\n\n    undo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.undoStack.length > 0) {\n                state.redoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.undoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Undo\");\n                this.getCurrentState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n\n        }\n        return success;\n    }\n\n    getStatesNames() {\n        let states = [];\n        for (var property in this._states) {\n            states.push(property);\n        }\n        return states;\n    }\n\n\n\n    //Private\n\n    _unSubscribe(stateName, index) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName) && stateName && index) {\n            let state = this._states[stateName];\n            state.subscribers[index - 1] = null;\n            this._a_history(state, \"unSubcribed\");\n            success = true;\n        }\n        else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot unSubcribe... :(\");\n        }\n        return success;\n    }\n\n    _create(stateName, stateValue, actionReference) {\n        let state = this._states[stateName] = {};\n\n        state.typeOfElement = typeof stateValue;\n        state.name = stateName;\n        state.value = stateValue;\n        if (this._willSubscribeWhenAlive.length > 0) {\n            this._willSubscribeCore(state);\n        } else {\n            state.subscribers = [];\n        }\n        state.action = actionReference;\n\n        if (this._settings.undoRedo) {\n            state.undoStack = [];\n            state.redoStack = [];\n        }\n        this._notifysubscribers(state);\n        this._a_history(state, \"Created\");\n    }\n\n\n\n    _update(state, stateName, stateValue, actionReference) {\n        if (!this._settings.typeMutable) {\n            if (state.typeOfElement !== typeof stateValue) {\n                this._debug.error(\"Error, mutability violated for: \" + state.name);\n                return;\n            }\n        } else {\n            state.typeOfElement = typeof stateValue;\n        }\n        if (this._settings.undoRedo) {\n            if (state.undoStack.length >= 100) {\n                state.undoStack.splice(parseInt(0, parseInt(state.undoStack.length / 2)));\n            }\n            state.undoStack.push({ value: state.value, action: state.actionReference });\n            state.redoStack = [];\n        }\n        state.value = stateValue;\n        state.action = actionReference;\n        this._a_history(state, \"Updated\");\n    }\n\n    _willSubscribeCore(state) {\n        //TODO: Refactor, 4X O(N)\n\n        //Extract will subcribe for this instance\n        let jedis = this._willSubscribeWhenAlive.filter((e) => { return e.name === state.name; });\n\n        //Remove jedis and update new queue.... BUG HERE\n        // this._willSubscribeWhenAlive = this._willSubscribeWhenAlive.filter((e) => { return jedis.indexOf(e) < 0 })\n\n        //Append to subscriber\n        state.subscribers = jedis.map((e) => {\n            return {\n                listener: e.listener,\n                unSubscribeCB: e.unSubscribeCB\n            }\n        });\n        //Notify new unsubcribe method.\n        state.subscribers.forEach((e, i) => {\n            try {\n                if (e.unSubscribeCB) {\n                    e.unSubscribeCB({\n                        unSubscribe: () => { this._unSubscribe(e.name, i) }\n                    });\n                }\n            } catch (o) {\n                this._debug.warn(o);\n            }\n        })\n\n    }\n\n    _notifysubscribers(state) {\n        if (state && state.subscribers.length > 0) {\n            for (var i = 0; i < state.subscribers.length; i++) {\n                try {\n                    if (state.subscribers[i] && state.subscribers[i].listener !== null) {\n                        state.subscribers[i].listener(state.value);\n                    }\n                }\n                catch (e) {\n                    this._debug.warn(state.subscribers[i].listener + \" No longer in scope\");\n                }\n            }\n            this._a_history(state, \"Notified Subscribers\");\n\n        }\n\n    }\n\n    _persistanceSave() {\n        try {\n            if (this._settings.persistance.persist) {\n                let storage;\n                if (this._settings.persistance.session) {\n                    storage = sessionStorage;\n                } else {\n                    storage = localStorage;\n                }\n                try {\n                    let data = {\n                        date: new Date(),\n                        states: this._states\n                    };\n                    storage.setItem(this._storageName, JSON.stringify(data));\n                } catch (e) {\n                    this._debug.log(e);\n                }\n            }\n        } catch (e) {\n            this._debug.log(e);\n        }\n    }\n\n    _persistanceLoad() {\n        try {\n            if (this._settings.persistance.persist) {\n                let storage;\n                if (this._settings.persistance.session) {\n                    storage = sessionStorage;\n                } else {\n                    storage = localStorage;\n                }\n                try {\n                    let results = storage.getItem(this._storageName);\n                    if (results) {\n                        let data = JSON.parse(results);\n                        let date = new Date(data.date);\n                        date.setDate(date.getDate() + this._settings.timeAlive);\n                        if (date < new Date()) {\n                            storage.removeItem(this._storageName);\n                        } else {\n\n                            let s = Object.assign({}, data.states);\n                            for (let x in s) {\n                                s[x].subscribers = [];\n                            }\n                            this._states = s;\n                        }\n                    }\n                } catch (e) {\n                    this._debug.log(e);\n                }\n            }\n        }\n        catch (e) {\n            this._debug.log(e);\n        }\n    }\n\n    _a_history(state, action) {\n        if (this._settings.actionsHistory) {\n            if (this._actions_history.length >= this._settings.actionsHistoryLimit) {\n                this._actions_history.splice(parseInt(0, parseInt(this._actions_history.length / 2)));\n            }\n            this._actions_history.push({\n                action: action,\n                state: Object.assign({}, state),\n                date: new Date()\n            });\n        }\n    }\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/rehoardpubsub.js\n **/","export default class ConsoleMessages {\n    constructor(production = false) {\n        this.production = production;\n    }\n    changeEnviroment(production = false) {\n        this.production = production\n    }\n    error(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    warn(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    info(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    log(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    debug(text) {\n        if (!this.production) return;\n        console.error(text);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/consolemessages.js\n **/"],"sourceRoot":""}