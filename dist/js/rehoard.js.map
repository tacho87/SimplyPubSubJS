{"version":3,"sources":["webpack:///webpack/bootstrap 0069f5048ecde9f997a8","webpack:///./src/rehoard.js","webpack:///./src/rehoard/rehoard.js","webpack:///./src/rehoard/components/rehoardpubsub.js","webpack:///./src/rehoard/components/consolemessages.js"],"names":["module","exports","window","ReHoard","_reHoardPubSub","StateHub","settings","changeSettings","stateName","stateValue","actionReference","dispatch","listener","subscribe","unSubscribeCB","subscribeWhenBecomesAlive","getCurrentState","deleteState","redo","undo","ReHoardPubSub","_states","_actions_history","_storageName","_persistanceLoad","_willSubscribeWhenAlive","_debug","_settings","persistance","persist","session","timeAlive","undoRedo","actionsHistory","actionsHistoryLimit","typeMutable","production","success","error","hasOwnProperty","state","_update","_notifysubscribers","_create","_persistanceSave","push","name","index","subscribers","undefined","_a_history","unSubscribe","_unSubscribe","warn","redoStack","length","undoStack","value","action","s","pop","typeOfElement","_willSubscribeCore","splice","parseInt","jedis","filter","e","indexOf","map","forEach","i","o","storage","sessionStorage","localStorage","data","date","Date","states","setItem","JSON","stringify","console","log","results","getItem","parse","setDate","getDate","removeItem","Object","assign","x","ConsoleMessages","text"],"mappings":"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","file":"rehoard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0069f5048ecde9f997a8\n **/","\nimport ReHoard from './rehoard/rehoard.js';\n\n\nmodule.exports = (() => {\n    if (!window.ReHoard) {\n        window.ReHoard = new ReHoard();\n        return window.ReHoard;\n    } else {\n        return window.ReHoard;\n    }\n})();\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard.js\n **/","import ReHoardPubSub from \"./components/rehoardpubsub.js\";\n\n\n\nexport default class ReHoard {\n    constructor() {\n        this._reHoardPubSub = new ReHoardPubSub();\n        window.StateHub = this;\n    }\n    changeSettings(settings) {\n        this._reHoardPubSub.changeSettings(settings);\n    }\n    dispatch(stateName, stateValue, actionReference = \"\") {\n        return this._reHoardPubSub.dispatch(stateName, stateValue, actionReference);\n    }\n    subscribe(stateName, listener) {\n        return this._reHoardPubSub.subscribe(stateName, listener);\n    }\n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB) {\n        return this._reHoardPubSub.subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB);\n    }\n    getCurrentState(stateName) {\n        return this._reHoardPubSub.getCurrentState(stateName);\n    }\n    deleteState(stateName) {\n        return this._reHoardPubSub.deleteState(stateName);\n    }\n    redo(stateName) {\n        return this._reHoardPubSub.redo(stateName);\n    }\n    undo(stateName) {\n        return this._reHoardPubSub.undo(stateName);\n    }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/rehoard.js\n **/","import ConsoleMessages from './consolemessages.js';\n\n\nexport default class ReHoardPubSub {\n\n    constructor() {\n        this.changeSettings(null);\n        this._states = {};\n        this._actions_history = [];\n        this._storageName = \"ReHoard\";\n        this._persistanceLoad();\n        this._willSubscribeWhenAlive = [];\n        this._debug;\n    }\n\n\n    changeSettings(settings) {\n\n        this._settings = {\n            persistance: {\n                persist: (settings && settings.persist ? settings.persist : true),\n                session: (settings && settings.session ? settings.session : true),\n                timeAlive: (settings && settings.timeAlive ? settings.timeAlive : 1)\n            },\n            undoRedo: (settings && settings.undoRedo ? settings.undoRedo : true),\n            actionsHistory: (settings && settings.actionsHistory ? settings.actionsHistory : true),\n            actionsHistoryLimit: (settings && settings.actionsHistoryLimit ? settings.actionsHistoryLimit : 100),\n            typeMutable: (settings && settings.typeMutable ? settings.typeMutable : false),\n            production: (settings && settings.production ? settings.production : true)\n        };\n        this._debug = new ConsoleMessages(this._settings.production);\n    }\n\n    dispatch(stateName, stateValue, actionReference = \"\") {\n        let success = false;\n\n        if (!stateName || !stateValue) {\n            this._debug.error(\"Null parameters dispatched \");\n            return success;\n        }\n        if (typeof actionReference !== \"string\") {\n            this._debug.error(\"An action must be a string type\");\n            return success;\n        }\n\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n\n            this._update(state, stateName, stateValue, actionReference);\n            this._notifysubscribers(state);\n\n            success = true;\n        } else {\n\n            this._create(stateName, stateValue, actionReference);\n\n            success = true;\n        }\n\n\n        this._persistanceSave();\n\n        return success;\n    }\n\n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB) {\n        if (this._states.hasOwnProperty(stateName) && listener) {\n            return this.subscribe(stateName, listener);\n        } else {\n            return this._willSubscribeWhenAlive.push({ name: stateName, listener: listener, unSubscribeCB: unSubscribeCB });\n        }\n    }\n\n    subscribe(stateName, listener) {\n        if (this._states.hasOwnProperty(stateName) && listener) {\n\n            let state = this._states[stateName];\n            let index = state.subscribers.push({\n                listener: listener,\n                unSubscribeCB: undefined\n            });\n            this._a_history(state, \"Listener Subscribed\");\n            this._notifysubscribers(state);\n            return {\n                unSubscribe: () => { this._unSubscribe(stateName, index) }\n            };\n        } else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot subscribe... :(\");\n            return false;\n        }\n    }\n\n    getCurrentState(stateName) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            this._notifysubscribers(state);\n            success = true;\n        } else {\n            this._debug.warn(\"getCurrentState failed to find state, check your state name\")\n        }\n        return success;\n    }\n\n    deleteState(stateName) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName)) {\n            this._a_history(this._states[stateName], \"State Deleted\");\n            this._persistanceSave();\n            delete this._states[stateName];\n            success = !this._states[stateName];\n        } else {\n            this._debug.error(stateName + \" does not exits yet... Cannot delete\");\n        }\n        return success;\n    }\n\n    redo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.redoStack.length > 0) {\n                state.undoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.redoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Redo\");\n                this.getCurrentState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n        }\n        return success;\n\n    }\n\n    undo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.undoStack.length > 0) {\n                state.redoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.undoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Undo\");\n                this.getCurrentState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n\n        }\n        return success;\n    }\n\n\n\n\n    //Private\n\n    _unSubscribe(stateName, index) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName) && stateName && index) {\n            let state = this._states[stateName];\n            state.subscribers[index - 1] = null;\n            this._a_history(state, \"unSubcribed\");\n            success = true;\n        }\n        else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot unSubcribe... :(\");\n        }\n        return success;\n    }\n\n    _create(stateName, stateValue, actionReference) {\n        let state = this._states[stateName] = {};\n\n        state.typeOfElement = typeof stateValue;\n        state.name = stateName;\n        state.value = stateValue;\n        if (this._willSubscribeWhenAlive.length > 0) {\n            this._willSubscribeCore(state);\n        } else {\n            state.subscribers = [];\n        }\n        state.action = actionReference;\n\n        if (this._settings.undoRedo) {\n            state.undoStack = [];\n            state.redoStack = [];\n        }\n        this._notifysubscribers(state);\n        this._a_history(state, \"Created\");\n    }\n\n\n\n    _update(state, stateName, stateValue, actionReference) {\n        if (!this._settings.typeMutable) {\n            if (state.typeOfElement !== typeof stateValue) {\n                this._debug.error(\"Error, mutability violated for: \" + state.name);\n                return;\n            }\n        } else {\n            state.typeOfElement = typeof stateValue;\n        }\n        if (this._settings.undoRedo) {\n            if (state.undoStack.length >= 100) {\n                state.undoStack.splice(parseInt(0, parseInt(state.undoStack.length / 2)));\n            }\n            state.undoStack.push({ value: state.value, action: state.actionReference });\n            state.redoStack = [];\n        }\n        state.value = stateValue;\n        state.action = actionReference;\n        this._a_history(state, \"Updated\");\n    }\n\n    _willSubscribeCore(state) {\n        //TODO: Refactor, 4X O(N)\n\n        //Extract will subcribe for this instance\n        let jedis = this._willSubscribeWhenAlive.filter((e) => { return e.name === state.name; });\n\n        //Remove jedis and update new queue\n        this._willSubscribeWhenAlive = this._willSubscribeWhenAlive.filter((e) => { return jedis.indexOf(e) < 0 })\n\n        //Append to subscriber\n        state.subscribers = jedis.map((e) => {\n            return {\n                listener: e.listener,\n                unSubscribeCB: e.unSubscribeCB\n            }\n        });\n        //Notify new unsubcribe method.\n        state.subscribers.forEach((e, i) => {\n            try {\n                if (e.unSubscribeCB) {\n                    e.unSubscribeCB({\n                        unSubscribe: () => { this._unSubscribe(e.name, i) }\n                    });\n                }\n            } catch (o) {\n                this._debug.warn(o);\n            }\n        })\n\n    }\n\n    _notifysubscribers(state) {\n        if (state && state.subscribers.length > 0) {\n            for (var i = 0; i < state.subscribers.length; i++) {\n                try {\n                    if (state.subscribers[i] && state.subscribers[i].listener !== null) {\n                        state.subscribers[i].listener(state.value);\n                    }\n                }\n                catch (e) {\n                    this._debug.warn(state.subscribers[i].listener + \" No longer in scope\");\n                }\n            }\n            this._a_history(state, \"Notified Subscribers\");\n\n        }\n\n    }\n\n    _persistanceSave() {\n        if (this._settings.persistance.persist) {\n            let storage;\n            if (this._settings.persistance.session) {\n                storage = sessionStorage;\n            } else {\n                storage = localStorage;\n            }\n            try {\n                let data = {\n                    date: new Date(),\n                    states: this._states\n                };\n                storage.setItem(this._storageName, JSON.stringify(data));\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }\n\n    _persistanceLoad() {\n        if (this._settings.persistance.persist) {\n            let storage;\n            if (this._settings.persistance.session) {\n                storage = sessionStorage;\n            } else {\n                storage = localStorage;\n            }\n            try {\n                let results = storage.getItem(this._storageName);\n                if (results) {\n                    let data = JSON.parse(results);\n                    let date = new Date(data.date);\n                    date.setDate(date.getDate() + this._settings.timeAlive);\n                    if (date < new Date()) {\n                        storage.removeItem(this._storageName);\n                    } else {\n\n                        let s = Object.assign({}, data.states);\n                        for (let x in s) {\n                            s[x].subscribers = [];\n                        }\n                        this._states = s;\n                    }\n                }\n            } catch (e) {\n                this._debug.log(e);\n            }\n        }\n    }\n\n    _a_history(state, action) {\n        if (this._settings.actionsHistory) {\n            if (this._actions_history.length >= this._settings.actionsHistoryLimit) {\n                this._actions_history.splice(parseInt(0, parseInt(this._actions_history.length / 2)));\n            }\n            this._actions_history.push({\n                action: action,\n                state: Object.assign({}, state),\n                date: new Date()\n            });\n        }\n    }\n}\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/rehoardpubsub.js\n **/","export default class ConsoleMessages {\n    constructor(production = false) {\n        this.production = production;\n    }\n    changeEnviroment(production = false) {\n        this.production = production\n    }\n    error(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    warn(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    info(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    log(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    debug(text) {\n        if (!this.production) return;\n        console.error(text);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/consolemessages.js\n **/"],"sourceRoot":""}