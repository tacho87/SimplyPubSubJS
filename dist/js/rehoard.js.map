{"version":3,"sources":["webpack:///webpack/bootstrap b3cedd39028f2c7a9baa","webpack:///./src/rehoard.js","webpack:///./src/rehoard/rehoard.js","webpack:///./src/rehoard/components/rehoardpubsub.js","webpack:///./src/rehoard/components/consolemessages.js"],"names":["module","exports","window","ReHoard","e","_reHoardPubSub","ReHoardPubSub","settings","changeSettings","stateName","stateValue","_create","actionReference","dispatch","listener","unSubscribeCB","subscribe","subscribeWhenBecomesAlive","broadcastState","getCurrentValue","deleteState","redo","undo","getStatesNames","_states","_actions_history","_storageName","_persistanceLoad","_willSubscribeWhenAlive","_debug","_settings","persistance","persist","session","timeAlive","undoRedo","actionsHistory","actionsHistoryLimit","typeMutable","production","test","sessionStorage","localStorage","ConsoleMessages","success","error","hasOwnProperty","state","_update","_notifysubscribers","_persistanceSave","push","name","uniqueId","Date","now","subscribers","_unSubscribe","_a_history","unSubscribe","warn","value","redoStack","length","undoStack","action","s","pop","states","property","filter","typeOfElement","_willSubscribeCore","splice","parseInt","jedis","map","forEach","i","o","setTimeout","opt","bind","storage","data","date","setItem","JSON","stringify","log","results","getItem","parse","setDate","getDate","removeItem","Object","assign","x","text","console"],"mappings":"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","file":"rehoard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b3cedd39028f2c7a9baa\n **/","\nimport ReHoard from './rehoard/rehoard.js';\n\n\nmodule.exports = (() => {\n    try {\n        window.ReHoard = ReHoard;\n        return window.ReHoard;\n    } catch (e) {\n        return ReHoard;\n    }\n})();\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard.js\n **/","import ReHoardPubSub from \"./components/rehoardpubsub.js\";\n\n\n\nexport default class ReHoard {\n    constructor() {\n        this._reHoardPubSub = new ReHoardPubSub();\n    }\n\n    /* Allow to change default settings. \n    settings = {\n            persist : true,\n            session : true,\n            timeAlive : 1,\n            undoRedo:  true,\n            actionsHistory: true,\n            actionsHistoryLimit:  100,\n            typeMutable: false,\n            production:  true\n       };\n   */\n    changeSettings(settings) {\n        this._reHoardPubSub.changeSettings(settings);\n    }\n\n    // Allows to create the state in a more explict way, a value must be passed to determine its type.\n    // Dispatch will handle creation, so this is not needed.\n    create(stateName, stateValue) {\n        return this._reHoardPubSub._create(stateName, stateValue, \"CREATION\");\n    }\n\n\n    // dispatch changes, this will broadcast to any subscribers.\n    // If state does not exists, it will create it, otherwise, it will update its value. \n    dispatch(stateName, stateValue, actionReference = \"\") {\n        return this._reHoardPubSub.dispatch(stateName, stateValue, actionReference);\n    }\n\n    // subcribes to an existing state, if it does not exists it will throw an exception. \n    subscribe(stateName, listener, unSubscribeCB) {\n        return this._reHoardPubSub.subscribe(stateName, listener, unSubscribeCB);\n    }\n\n    // will subscribe if the state exists, otherwise will queue it up once it is created. \n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB) {\n        return this._reHoardPubSub.subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB);\n    }\n\n    // force a broadcast of the current value to everyone\n    broadcastState(stateName) {\n        return this._reHoardPubSub.broadcastState(stateName);\n    }\n\n    // returns current value of the state sync. No broadcasting happens\n    getCurrentState(stateName) {\n        return this._reHoardPubSub.getCurrentValue(stateName);\n    }\n\n    // Delete the current state and its listeners.\n    deleteState(stateName) {\n        return this._reHoardPubSub.deleteState(stateName);\n    }\n\n    // Redo the value state + action \n    redo(stateName) {\n        return this._reHoardPubSub.redo(stateName);\n    }\n\n    // Undo the value to previous one\n    undo(stateName) {\n        return this._reHoardPubSub.undo(stateName);\n    }\n\n    // Prints all states\n    getStatesNames(){\n        return this._reHoardPubSub.getStatesNames();\n    }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/rehoard.js\n **/","import ConsoleMessages from './consolemessages.js';\n\n\nexport default class ReHoardPubSub {\n\n    constructor() {\n        this.changeSettings(null);\n        this._states = {};\n        this._actions_history = [];\n        this._storageName = \"ReHoard\";\n        this._persistanceLoad();\n        this._willSubscribeWhenAlive = [];\n        this._debug;\n    }\n\n\n    changeSettings(settings) {\n\n        this._settings = {\n            persistance: {\n                persist: (settings && settings.persist ? settings.persist : true),\n                session: (settings && settings.session ? settings.session : true),\n                timeAlive: (settings && settings.timeAlive ? settings.timeAlive : 1)\n            },\n            undoRedo: (settings && settings.undoRedo ? settings.undoRedo : true),\n            actionsHistory: (settings && settings.actionsHistory ? settings.actionsHistory : true),\n            actionsHistoryLimit: (settings && settings.actionsHistoryLimit ? settings.actionsHistoryLimit : 100),\n            typeMutable: (settings && settings.typeMutable ? settings.typeMutable : false),\n            production: (settings && settings.production ? settings.production : true)\n        };\n\n        try {\n            let test = sessionStorage || localStorage;\n        } catch (e) {\n            this._settings.persist = false;\n            this._settings.persist = false;\n        }\n        this._debug = new ConsoleMessages(this._settings.production);\n    }\n\n    dispatch(stateName, stateValue, actionReference = \"\") {\n        let success = false;\n\n        if (!stateName || !stateValue) {\n            this._debug.error(\"Null parameters dispatched \");\n            return success;\n        }\n        if (typeof actionReference !== \"string\") {\n            this._debug.error(\"An action must be a string type\");\n            return success;\n        }\n\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n\n            this._update(state, stateName, stateValue, actionReference);\n            this._notifysubscribers(state);\n\n            success = true;\n        } else {\n\n            this._create(stateName, stateValue, actionReference);\n\n            success = true;\n        }\n\n\n        this._persistanceSave();\n\n        return success;\n    }\n\n    subscribeWhenBecomesAlive(stateName, listener, unSubscribeCB = null) {\n\n        if (this._states.hasOwnProperty(stateName) && listener)\n            return this.subscribe(stateName, listener, unSubscribeCB);\n        else\n            return this._willSubscribeWhenAlive.push({ name: stateName, listener: listener, unSubscribeCB: unSubscribeCB });\n    }\n\n    subscribe(stateName, listener, unSubscribeCB) {\n        if (this._states.hasOwnProperty(stateName) && listener) {\n\n            let state = this._states[stateName];\n\n            let uniqueId = Date.now();\n\n            state.subscribers.push({\n                listener: listener,\n                unSubscribeCB: () => this._unSubscribe(stateName, uniqueId),\n                uniqueId: uniqueId\n            });\n\n            this._a_history(state, \"Listener Subscribed\");\n\n            this._notifysubscribers(state);\n\n            return {\n                unSubscribe: () => this._unSubscribe(stateName, uniqueId)\n            };\n\n        } else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot subscribe... :(\");\n\n            return false;\n        }\n    }\n\n    broadcastState(stateName) {\n\n        let success = false;\n\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            this._notifysubscribers(state);\n            success = true;\n\n        } else {\n            this._debug.warn(\"broadcastState failed to find state, check your state name\")\n        }\n        return success;\n    }\n\n\n    getCurrentValue(stateName) {\n        if (this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            return state.value;\n        } else {\n            return null;\n        }\n    }\n\n\n    deleteState(stateName) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName)) {\n            this._a_history(this._states[stateName], \"State Deleted\");\n            this._persistanceSave();\n            delete this._states[stateName];\n            success = !this._states[stateName];\n        } else {\n            this._debug.error(stateName + \" does not exits yet... Cannot delete\");\n        }\n        return success;\n    }\n\n    redo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.redoStack.length > 0) {\n                state.undoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.redoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Redo\");\n                this.broadcastState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n        }\n        return success;\n\n    }\n\n    undo(stateName) {\n        let success = false;\n        if (this._settings.undoRedo && stateName && this._states.hasOwnProperty(stateName)) {\n            let state = this._states[stateName];\n            if (state.undoStack.length > 0) {\n                state.redoStack.push({ value: state.value, action: state.actionReference });\n                let s = state.undoStack.pop();\n                state.value = s.value;\n                state.actionReference = s.actionReference;\n                this._a_history(state, \"Undo\");\n                this.broadcastState(stateName);\n                this._persistanceSave();\n                success = true;\n            }\n\n        }\n        return success;\n    }\n\n    getStatesNames() {\n        let states = [];\n        for (var property in this._states) {\n            states.push(property);\n        }\n        return states;\n    }\n\n\n\n    //Private\n\n    _unSubscribe(stateName, uniqueId) {\n        let success = false;\n        if (this._states.hasOwnProperty(stateName) && stateName && uniqueId) {\n            let state = this._states[stateName];\n            state.subscribers = state.subscribers.filter((e) => e.uniqueId !== uniqueId);\n            this._a_history(state, \"unSubcribed\");\n            success = true;\n        }\n        else {\n            this._debug.warn(stateName + \" does not exits yet... Cannot unSubcribe... :(\");\n        }\n        return success;\n    }\n\n    _create(stateName, stateValue, actionReference) {\n        let state = this._states[stateName] = {};\n\n        state.typeOfElement = typeof stateValue;\n        state.name = stateName;\n        state.value = stateValue;\n        if (this._willSubscribeWhenAlive.length > 0) {\n            this._willSubscribeCore(state);\n        } else {\n            state.subscribers = [];\n        }\n        state.action = actionReference;\n\n        if (this._settings.undoRedo) {\n            state.undoStack = [];\n            state.redoStack = [];\n        }\n        this._notifysubscribers(state);\n        this._a_history(state, \"Created\");\n    }\n\n\n\n    _update(state, stateName, stateValue, actionReference) {\n        if (!this._settings.typeMutable) {\n            if (state.typeOfElement !== typeof stateValue) {\n                this._debug.error(\"Error, mutability violated for: \" + state.name);\n                return;\n            }\n        } else {\n            state.typeOfElement = typeof stateValue;\n        }\n        if (this._settings.undoRedo) {\n            if (state.undoStack.length >= 100) {\n                state.undoStack.splice(parseInt(0, parseInt(state.undoStack.length / 2)));\n            }\n            state.undoStack.push({ value: state.value, action: state.actionReference });\n            state.redoStack = [];\n        }\n        state.value = stateValue;\n        state.action = actionReference;\n        this._a_history(state, \"Updated\");\n    }\n\n    _willSubscribeCore(state) {\n        //TODO: Refactor, 4X O(N)\n\n        //Extract will subcribe for this instance\n        let jedis = this._willSubscribeWhenAlive.filter((e) => { return e.name === state.name; });\n\n        //Remove jedis and update new queue.... BUG HERE\n        // this._willSubscribeWhenAlive = this._willSubscribeWhenAlive.filter((e) => { return jedis.indexOf(e) < 0 })\n\n        //Append to subscriber\n        state.subscribers = jedis.map((e) => {\n            return {\n                listener: e.listener,\n                unSubscribeCB: e.unSubscribeCB,\n                uniqueId: Date.now()\n            }\n        });\n        //Notify new unsubcribe method.\n        state.subscribers.forEach((e, i) => {\n            try {\n                if (e.unSubscribeCB) {\n                    e.unSubscribeCB({\n                        unSubscribe: () => { this._unSubscribe(e.name, uniqueId) }\n                    });\n                }\n            } catch (o) {\n                this._debug.warn(o);\n            }\n        })\n\n    }\n\n    _notifysubscribers(state) {\n        if (state && state.subscribers.length > 0) {\n            for (var i = 0; i < state.subscribers.length; i++) {\n                if (state.subscribers[i] && state.subscribers[i].listener !== null) {\n\n                    setTimeout(function (opt, value) {\n                        try {\n                            opt.listener(value);\n                        } catch (e) {\n                            this._debug.error(e);\n                        }\n                    }.bind(this, state.subscribers[i], state.value)\n                    , 0);\n\n                }\n            }\n        }\n        this._a_history(state, \"Notified Subscribers\");\n\n\n\n    }\n\n    _persistanceSave() {\n        try {\n            if (this._settings.persistance.persist) {\n                let storage;\n                if (this._settings.persistance.session) {\n                    storage = sessionStorage;\n                } else {\n                    storage = localStorage;\n                }\n                try {\n                    let data = {\n                        date: new Date(),\n                        states: this._states\n                    };\n                    storage.setItem(this._storageName, JSON.stringify(data));\n                } catch (e) {\n                    this._debug.log(e);\n                }\n            }\n        } catch (e) {\n            this._debug.log(e);\n        }\n    }\n\n    _persistanceLoad() {\n        try {\n            if (this._settings.persistance.persist) {\n                let storage;\n                if (this._settings.persistance.session) {\n                    storage = sessionStorage;\n                } else {\n                    storage = localStorage;\n                }\n                try {\n                    let results = storage.getItem(this._storageName);\n                    if (results) {\n                        let data = JSON.parse(results);\n                        let date = new Date(data.date);\n                        date.setDate(date.getDate() + this._settings.timeAlive);\n                        if (date < new Date()) {\n                            storage.removeItem(this._storageName);\n                        } else {\n\n                            let s = Object.assign({}, data.states);\n                            for (let x in s) {\n                                s[x].subscribers = [];\n                            }\n                            this._states = s;\n                        }\n                    }\n                } catch (e) {\n                    this._debug.log(e);\n                }\n            }\n        }\n        catch (e) {\n            this._debug.log(e);\n        }\n    }\n\n    _a_history(state, action) {\n        if (this._settings.actionsHistory) {\n            if (this._actions_history.length >= this._settings.actionsHistoryLimit) {\n                this._actions_history.splice(parseInt(0, parseInt(this._actions_history.length / 2)));\n            }\n            this._actions_history.push({\n                action: action,\n                state: Object.assign({}, state),\n                date: new Date()\n            });\n        }\n    }\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/rehoardpubsub.js\n **/","export default class ConsoleMessages {\n    constructor(production = false) {\n        this.production = production;\n    }\n    changeEnviroment(production = false) {\n        this.production = production\n    }\n    error(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    warn(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    info(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    log(text) {\n        if (this.production) return;\n        console.error(text);\n    }\n    debug(text) {\n        if (!this.production) return;\n        console.error(text);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rehoard/components/consolemessages.js\n **/"],"sourceRoot":""}